package travis.halleck;

import java.awt.Image;

import javax.swing.ImageIcon;
import javax.swing.JButton;

public class SpecialButtons extends JButton{
	private static final long serialVersionUID = 1L;

	public SpecialButtons(String buttonFunction, int width, int height) {
		if(buttonFunction == "play") {
			this.setIcon(scaleImage(width, height, new ImageIcon(MainGUI.class.getResource("/images/png/009-arrows-1.png"))));
		}else if(buttonFunction == "stop") {
			this.setIcon(scaleImage(width, height, new ImageIcon(MainGUI.class.getResource("/images/png/005-square.png"))));
		}else if(buttonFunction == "rewind") {
			this.setIcon(scaleImage(width, height, new ImageIcon(MainGUI.class.getResource("/images/png/003-arrows-4.png"))));
		}else if(buttonFunction == "forward") {
			this.setIcon(scaleImage(width, height, new ImageIcon(MainGUI.class.getResource("/images/png/007-arrows-2.png"))));
		}else if(buttonFunction == "loop") {
			this.setIcon(scaleImage(width, height, new ImageIcon(MainGUI.class.getResource("/images/png/001-arrows-6.png"))));
		}else if(buttonFunction == "pause") {
			this.setIcon(scaleImage(width, height, new ImageIcon(MainGUI.class.getResource("/images/png/016-signs-1.png"))));
		}else {
			this.setText(super.getText());
		}
	}

	//helper method for resizing icon image to ensure programmer controls the size rendered
	
	/**
	 * Returns an Image object that can then be painted on the screen. 
	 * The url argument must specify an absolute {@link URL}. The name
	 * argument is a specifier that is relative to the url argument. 
	 * <p>
	 * This method always returns immediately, whether or not the 
	 * image exists. When this applet attempts to draw the image on
	 * the screen, the data will be loaded. The graphics primitives 
	 * that draw the image will incrementally paint on the screen. 
	 *
	 * @param  url  an absolute URL giving the base location of the image
	 * @param  name the location of the image, relative to the url argument
	 * @return      the image at the specified URL
	 * @see         Image
	 */
	private ImageIcon scaleImage(int w, int h, ImageIcon icon) {
		 Image img = icon.getImage();
		 Image newImg = img.getScaledInstance(w, h, java.awt.Image.SCALE_SMOOTH);
		 icon = new ImageIcon(newImg);
		 return icon;
	}
}
