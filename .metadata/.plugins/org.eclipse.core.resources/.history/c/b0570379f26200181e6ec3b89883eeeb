package travis.halleck;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.JComboBox;

public class PlaylistFile {
	private JComboBox<String> cb;
	private BufferedReader brNames, brPaths;
	private BufferedWriter bwNames, bwPaths;
	private final String NamesOnList = "music_names.txt";
	private final String PathsOnList = "music_paths.txt";
	
	public PlaylistFile(JComboBox<String> cb) throws IOException {
		this.cb = cb;
		brNames = new BufferedReader(new FileReader(NamesOnList));
		brPaths = new BufferedReader(new FileReader(PathsOnList));
		bwNames = new BufferedWriter(new FileWriter(NamesOnList));
		bwPaths = new BufferedWriter(new FileWriter(PathsOnList));
	}
	
	public void readFromFiles() throws IOException { 
		
			try {
				//brNames = new BufferedReader(new FileReader(NamesOnList));
				//brPaths = new BufferedReader(new FileReader(PathsOnList));
				
				while(true) {
					String names = brNames.readLine();
					String paths = brPaths.readLine();
					
					if(names == null || paths == null) {
						break;
					}
					
					cb.setSelectedItem(names);
					PlayerList.addToNameList(names);
					PlayerList.addToPathList(paths);
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
			brNames.close();
			brPaths.close();	
		
	}
	
	public void writeToFiles() throws IOException  {
		try {
			//bwNames = new BufferedWriter(new FileWriter(NamesOnList));
			//bwPaths = new BufferedWriter(new FileWriter(PathsOnList));
			
			for(int i = 0; i<PlayerList.getListSize(); i++) {
				bwNames.write(PlayerList.getNamesByIndex(i));
				bwNames.newLine();
				bwPaths.write(PlayerList.getFullPathByIndex(i));
				bwPaths.newLine();
			}
		} catch (IOException e) {
			e.printStackTrace();
			e.getMessage();
		}
		bwNames.close();
		bwPaths.close();
	}

	public boolean filesEmpty(){
		boolean isEmpty = false;
		try {
			if(!brNames.ready()) {
				isEmpty = true;
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return isEmpty;
	}
	
}
